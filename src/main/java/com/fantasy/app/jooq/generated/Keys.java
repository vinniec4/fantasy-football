/*
 * This file is generated by jOOQ.
 */
package com.fantasy.app.jooq.generated;


import com.fantasy.app.jooq.generated.tables.Players;
import com.fantasy.app.jooq.generated.tables.Teams;
import com.fantasy.app.jooq.generated.tables.records.PlayersRecord;
import com.fantasy.app.jooq.generated.tables.records.TeamsRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>fantasy_football</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<PlayersRecord> PLAYERS_PK = UniqueKeys0.PLAYERS_PK;
    public static final UniqueKey<TeamsRecord> TEAMS_PK = UniqueKeys0.TEAMS_PK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PlayersRecord, TeamsRecord> PLAYERS__PLAYERS_TEAMS_ID_FK = ForeignKeys0.PLAYERS__PLAYERS_TEAMS_ID_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<PlayersRecord> PLAYERS_PK = Internal.createUniqueKey(Players.PLAYERS, "players_pk", new TableField[] { Players.PLAYERS.ID }, true);
        public static final UniqueKey<TeamsRecord> TEAMS_PK = Internal.createUniqueKey(Teams.TEAMS, "teams_pk", new TableField[] { Teams.TEAMS.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<PlayersRecord, TeamsRecord> PLAYERS__PLAYERS_TEAMS_ID_FK = Internal.createForeignKey(Keys.TEAMS_PK, Players.PLAYERS, "players_teams_id_fk", new TableField[] { Players.PLAYERS.TEAM_ID }, true);
    }
}
